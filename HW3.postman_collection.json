{
	"info": {
		"_postman_id": "034126b2-1f70-4eb3-ab5a-c23b43c01f01",
		"name": "HW3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var get_token = jsonData.token;\r",
							"\r",
							"pm.environment.set(\"token\",get_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Alesia",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Helloworld1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2) Проверка структуры json в ответе.\r",
							"pm.test(\"Json validate schema\", () => {\r",
							"    const schema = {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"person\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"u_age\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"u_name\": {\r",
							"                        \"type\": \"array\",\r",
							"                        \"items\": [\r",
							"                            {\r",
							"                            \"type\": \"string\"\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"integer\"\r",
							"                        }\r",
							"                        ]\r",
							"                    },\r",
							"                    \"u_salary_1_5_year\": {\r",
							"                        \"type\": \"integer\"\r",
							"                    }\r",
							"\r",
							"\r",
							"                },\r",
							"                \"required\": [\r",
							"                    \"u_age\",\r",
							"                    \"u_name\",\r",
							"                    \"u_salary_1_5_year\"\r",
							"                ]\r",
							"\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": \r",
							"            {\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"\": \r",
							"            {\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"start_qa_salary\": \r",
							"            {\r",
							"                \"type\": \"integer\"\r",
							"            }\r",
							"        },\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ]\r",
							"\r",
							"    }\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"    var responseData = JSON.parse(responseBody); \r",
							"    pm.expect(tv4.validate(responseData, schema)).to.be.true\r",
							"});\r",
							"\r",
							"\r",
							"// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var responseData = JSON.parse(responseBody);\r",
							"//variables\r",
							"var reqestData = JSON.parse(request.data);\r",
							"var request_salary = reqestData.salary;\r",
							"\r",
							"// console.log(\"request_salary --\", request_salary);\r",
							"var start_qa_salary = responseData.start_qa_salary;\r",
							"var qa_salary_after_6_months = responseData.qa_salary_after_6_months;\r",
							"var qa_salary_after_12_months = responseData.qa_salary_after_12_months;\r",
							"var u_salary_1_5_year = responseData.person.u_salary_1_5_year;\r",
							"\r",
							"pm.test(\"Check start price\", function () {\r",
							"    pm.expect(start_qa_salary).to.eql(request_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check *2 price\", function () {\r",
							"    pm.expect(qa_salary_after_6_months).to.eql(request_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check *2.9 price\", function () {\r",
							"    pm.expect(qa_salary_after_12_months).to.eql(request_salary*2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"Check *2.9 price\", function () {\r",
							"    pm.expect(u_salary_1_5_year).to.eql(request_salary*4);\r",
							"});\r",
							"\r",
							"// 4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"\r",
							"pm.environment.set(\"u_salary_1_5_year\", u_salary_1_5_year);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\" : 27,\r\n    \"salary\" : 2000,\r\n    \"name\" : \"Alesia\",\r\n    \"auth_token\" : \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2) Проверка структуры json в ответе.\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"// var responseData = JSON.parse(responseBody);\r",
							"// tests [\"Success chema\"] = tv4.validate(responseData, schema);\r",
							"var responseData = JSON.parse(responseBody);\r",
							"pm.test('Success chema 1', function() {\r",
							"    pm.expect(tv4.validate(responseData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var responseData = JSON.parse(responseBody);\r",
							"var requestData = request.data;\r",
							"var request_salary = requestData.salary;\r",
							"\r",
							"var salary0 = parseInt(responseData.salary[0]);\r",
							"var salary1 = parseInt(responseData.salary[1]);\r",
							"var salary2 = parseInt(responseData.salary[2]);\r",
							"\r",
							"console.log(salary0);\r",
							"\r",
							"pm.test(\"Check price\", function () {\r",
							"    pm.expect(salary0).to.eql(parseInt(request_salary));\r",
							"});\r",
							"\r",
							"pm.test(\"Check *2 price\", function () {\r",
							"    pm.expect(salary1).to.eql(request_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check *3 price\", function () {\r",
							"    pm.expect(salary2).to.eql(request_salary*3);\r",
							"});\r",
							"\r",
							"// 4) проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"\r",
							"pm.test(\"Сheck 2 element salary\", function() {\r",
							"    pm.expect(salary0<salary1<salary2).to.be.true\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "/test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2) Проверка структуры json в ответе.\r",
							"\r",
							"var schema = {\r",
							"\"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"daily_food\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"daily_sleep\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"daily_food\",\r",
							"    \"daily_sleep\",\r",
							"    \"name\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var responseData = JSON.parse(responseBody);\r",
							"pm.test('Success chema 1', function() {\r",
							"    pm.expect(tv4.validate(responseData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// 3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"\r",
							"var requestData = request.data\r",
							"var request_weight = parseInt(requestData.weight);\r",
							"// console.log(request_weight)\r",
							"\r",
							"pm.test(\"daily_food = weight * 0.012\", function () {\r",
							"    pm.expect(responseData.daily_food).to.eql(request_weight*0.012);\r",
							"});\r",
							"\r",
							"pm.test(\"daily_sleep = weight * 2.5\", function () {\r",
							"    pm.expect(responseData.daily_sleep).to.eql(request_weight*2.5);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "51",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2) Проверка структуры json в ответе.\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"age\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"family\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"children\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"array\",\r",
							"              \"items\": [\r",
							"                {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"u_salary_1_5_year\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"children\",\r",
							"        \"u_salary_1_5_year\"\r",
							"      ]\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"salary\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"age\",\r",
							"    \"family\",\r",
							"    \"name\",\r",
							"    \"salary\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var responseData = JSON.parse(responseBody);\r",
							"pm.test('Success chema 1', function() {\r",
							"    pm.expect(tv4.validate(responseData, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// 3) Проверить что занчение поля name = значению переменной name из окружения\r",
							"\r",
							"var requestData = request.data\r",
							"var request_name = requestData.name;\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(responseData.name).to.eql(request_name);\r",
							"});\r",
							"\r",
							"// 4) Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"\r",
							"var request_age = requestData.age;\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(responseData.age).to.eql(request_age);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Можете взять любой объект из присланного списка, используйте js random.\r",
							"// В объекте возьмите Cur_ID и передать через окружение в следующий запрос.\r",
							"\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"// console.log(\"jsonData\", jsonData);\r",
							"let length_jsonData = jsonData.length;\r",
							"// console.log(\"length_jsonData\", length_jsonData);\r",
							"let curID = Math.floor(Math.random()*length_jsonData);\r",
							"console.log(\"curID\", curID);\r",
							"pm.environment.set(\"Cur_ID\", curID)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1) Статус код 200\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"// Статус код 200 или 500\r",
							"pm.test(\"Status code 200 or 500\", function() {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,500])\r",
							"});\r",
							"\r",
							"// 2) Проверка структуры json в ответе.\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"Cur_Abbreviation\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_ID\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Cur_Name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"Cur_OfficialRate\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"Cur_Scale\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"Date\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"Cur_Abbreviation\",\r",
							"    \"Cur_ID\",\r",
							"    \"Cur_Name\",\r",
							"    \"Cur_OfficialRate\",\r",
							"    \"Cur_Scale\",\r",
							"    \"Date\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"var responseData = JSON.parse(responseBody);\r",
							"pm.test('Success chema 1', function() {\r",
							"    pm.expect(tv4.validate(responseData, schema)).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}